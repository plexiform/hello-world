{"version":3,"sources":["webpack:///./src/pages/what_a_racket.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","text","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-what-a-racket-mdx-71d13717ce56ea461b6b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport MyPop from '../components/popover.js';\nexport const _frontmatter = {\n  \"title\": \"mutual\",\n  \"date\": null,\n  \"tags\": [\"complex_data\"],\n  \"published\": true\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <MyPop text=\"Surely this joke isn't overused.\" mdxType=\"MyPop\">A self-referencing function is a function that refers to itself.</MyPop> It'll operate on a list that itself contains more lists (e.g. ListOfColor is either `empty` or `cons Color ListOfColor`). Through the principle of induction, we can be certain that the sub-lists will yield to the function just the same as their parent lists, until they arrive at some base case. These lists are horizontal.\n    <p>{`Mutual reference means two data types that refer to each other. For example, if \"ListOfElement\" contains type \"Element,\" and type \"Element\" contains type \"ListOfElement.\" This allows the cycle between these two to be arbitrarily deep, or vertical.`}</p>\n    <p>{`It can be helpful to draw out the connections between data types. We begin by drawing up data definitions and their corresponding templates for our mutually recursive functions.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scheme\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-scheme\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scheme\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; Data definitions`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`define-struct`}</span>{` elt `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`name`}</span>{` data subs`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; Element is (make-elt String Integer ListOfElement)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; interpretation: an element in the file system that has a name and`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; either data or subs. If data is 0, then subs is treated as a list`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; of sub elements. If data isn't 0, then subs is ignored.`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; ListOfElement is one of`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; - empty`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; - (cons Element ListOfElement)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`fn-for-element`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`...`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-name`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n         `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-data`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n         `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`fn-for-loe`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-subs`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`fn-for-loe`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`cond`}</span>{` [`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`empty?`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`...`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`]\n        [else\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`...`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`fn-for-element`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`first`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n               `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`fn-for-loe`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`rest`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`]`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span></code></pre></div>\n    <hr />\nIf a tree that has some elements in it, but each element may contain further lists of elements, that's an arbitrary arity tree. There will be a back-and-forth  between the element and its list of elements (and vice versa) until we arrive at our desired result. \n    <p>{`For example,`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scheme\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-scheme\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scheme\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` F1 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`make-elt`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F1\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` empty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` F2 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`make-elt`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F2\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2`}</span>{` empty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` F3 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`make-elt`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F3\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`3`}</span>{` empty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` D4 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`make-elt`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"D4\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`list`}</span>{` F1 F2`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` D5 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`make-elt`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"D5\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`list`}</span>{` F3`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` D6 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`make-elt`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"D6\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`list`}</span>{` D4 D5`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span></code></pre></div>\n    <p>{`Elements can be either \"F's\" (files) or \"D's\" (directories). Directories have \"0\" for data, indicating they have no data, but that they do have sub-elements. For example, D4 contains files F1 and F2. Note that the files are the very bottom of the tree, and their data are integers (1, 2, 3).`}</p>\n    <p>{`If we want to sum all the data in a tree represented as above, we can do so as follows`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scheme\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-scheme\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scheme\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; Element -> Integer`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; produce sum of all data in element and its sub-lists of elements`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--loe`}</span>{` empty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; if there's nothing else in the list, there's nothing more to add, i.e. 0`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--element`}</span>{` F1`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--element`}</span>{` D5`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`3`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--element`}</span>{` D4`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--element`}</span>{` D6`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`3`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--element`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`zero?`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-data`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`          `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; 0 indicates there's no data, but there is a list`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--loe`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-subs`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; since there's a list, call the ListOfElement function on it -- it can then add what remains in elt-subs`}</span>{`\n          `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-data`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`                `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; If we've reached the file data, there's no further searching to be done, since the files are at the bottom of the tree`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--loe`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`cond`}</span>{` [`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`empty?`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` 0]                    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; list is empty, nada to add`}</span>{`\n        [else\n         `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--element`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`first`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; list isn't empty, meaning it has either a file or further directories. If it has file, we get to`}</span>{`\n                                            `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; add the file's data. If it has more subdirectories, we'll recurse through them, \"trusting the natural/mutual recursion\"`}</span>{`\n            `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sum-data--loe`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`rest`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`]`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span></code></pre></div>\n    <br />\n    <h3>Backtracking Search:</h3>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scheme\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-scheme\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scheme\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; String Element -> Integer or false`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; String ListOfElement -> Integer or false`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;; search a tree for an element with the given name; produce the data if found, false otherwise`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--loe`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F3\"`}</span>{` empty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` false`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F1\"`}</span>{` F1`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--loe`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F2\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`cons`}</span>{` F1 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`cons`}</span>{` F2 empty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--loe`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F3\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`cons`}</span>{` F1 `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`cons`}</span>{` F2 empty`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` false`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F3\"`}</span>{` D4`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` false`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F2\"`}</span>{` D4`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"F3\"`}</span>{` D5`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`3`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`check-expect`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"D6\"`}</span>{` D6`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;(define (find--element str elt) #false) ;stubs`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`;(define (find--element str loe) #false) `}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` str e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`string=?`}</span>{` str `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-name`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-data`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--loe`}</span>{` str `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`elt-subs`}</span>{` e`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`#| If the string equals the current name, then we've found it,\nend of. Otherwise we begin to check the list.\n|#`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`define`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--loe`}</span>{` str loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`cond`}</span>{` [`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`empty?`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` false]\n        [else\n         `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`if`}</span>{`  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`not`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`false?`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` str `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`first`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n              `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--element`}</span>{` str `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`first`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n              `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`find--loe`}</span>{` str `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`rest`}</span>{` loe`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`]`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`#|\nIf we reach the an empty list, our search has come up short.\nIt coming up short means to yield false.\n\nIf we didn't reach an empty list, we check the first element.\nWe trust our mutual recursion and let our find--element\nfunction return either false or something else.\n\nIf it doesn't return false, we found our element.\n\nIf it does, we perform the same routine on the rest of the list.\n\n\n|#`}</span></code></pre></div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}