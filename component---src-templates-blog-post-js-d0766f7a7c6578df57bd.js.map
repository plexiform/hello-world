{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/templates/blog-post.js"],"names":["MDXRenderer","require","module","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn","exports","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","post","data","css","style","direction","tag","to"],"mappings":"iFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,woBCTf,IAAMG,EAAQF,EAAd,QACQG,EAAQH,EAAQ,QAAhBG,IACAC,EAAgBJ,EAAQ,QAAxBI,YAERH,UAAiB,SAAqB,GAIlC,IAHFI,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,0BACKC,EAAWJ,EADhB,GAIKK,EAAMP,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIbC,OAJF,GAQMQ,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOJ,uBAAP,M,mBCnBFD,EAAOe,QAbP,WACE,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,QAAQC,UAAUC,QAAQC,KAAKP,QAAQC,UAAUG,QAAS,IAAI,iBACvD,EACP,MAAOI,GACP,OAAO,IAKXxB,EAAOe,QAAiB,QAAIf,EAAOe,QAASf,EAAOe,QAAQU,YAAa,G,qBCdxE,IAAIC,EAAiB,EAAQ,QAEzBC,EAA2B,EAAQ,QAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAiBhC,OAhBIJ,KACF3B,EAAOe,QAAUa,EAAaZ,QAAQC,UACtCjB,EAAOe,QAAiB,QAAIf,EAAOe,QAASf,EAAOe,QAAQU,YAAa,IAExEzB,EAAOe,QAAUa,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,GAAOL,EAAeS,EAAUJ,EAAMV,WACnCc,GAGTnC,EAAOe,QAAiB,QAAIf,EAAOe,QAASf,EAAOe,QAAQU,YAAa,GAGnEG,EAAWM,MAAM,KAAMI,WAGhCtC,EAAOe,QAAUa,EACjB5B,EAAOe,QAAiB,QAAIf,EAAOe,QAASf,EAAOe,QAAQU,YAAa,G,gQChBzD,sBAAe,IACtBc,EADqB,EAAXC,KAChB,IACA,OACE,qBACE,uBACA,iBACEC,IAAG,GAODF,cATJ,OAYA,iBAAGG,MAAO,CAACC,UAAU,QAAS,qBAAKJ,cAZnC,OAcA,+BAAcA,EAfhB,OAmBE,iBAnBF,MAsBE,qBAAG,qBAAH,eACE,OAAAA,EAAA,iBAEEA,EAAA,sBAA2B,SAAAK,GAAG,OAC5B,iBAAMC,GAAE,SAAWD,GAAnB,MAD4B,QAKhC,qBA/BN","file":"component---src-templates-blog-post-js-d0766f7a7c6578df57bd.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport \"katex/dist/katex.min.css\"\nimport Popover from \"@material-ui/core/Popover\"\nimport MyPop from '../components/popover.js'\n\nexport default ({ data }) => {\n  const post = data.mdx;\n  return (\n    <Layout>\n      <div>\n      <p\n        css={css`\n          font-family:\"LiterataVariable\";\n          font-variation-settings:\"wght\" 400;\n          font-size:1.5em;\n          font-style:italic;\n        `}\n      >\n        { post.frontmatter.title }\n    </p>\n\n      <p style={{direction:`rtl`}}>{<i>{ post.frontmatter.date }</i>}</p>\n\n      <MDXRenderer>{post.body}</MDXRenderer>\n\n      </div>\n\n      <hr/>\n\n      {/* ternary operator to show tags if they exist, not otherwise */}\n      <p><b>tags</b>:&nbsp;&nbsp;&nbsp;\n      { post.frontmatter.tags !== null ?\n\n          post.frontmatter.tags.map((tag => (\n            <Link to={`/tags/${tag}`}>‚óè{tag} </Link>\n          )))\n\n        :\n        <i>guten tag!</i>\n      }\n       </p>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        title\n        tags\n        date\n        published\n      }\n    }\n  }\n`\n// (formatString: \"YYYY, MMMM DD\")\n"],"sourceRoot":""}